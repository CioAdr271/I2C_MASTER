
I2C_MASTER_App2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  000003b0  00000444  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800116  00800116  0000045a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000045a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000048c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  000004cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f4b  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000782  00000000  00000000  00001477  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000069b  00000000  00000000  00001bf9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  00002294  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004be  00000000  00000000  00002364  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000526  00000000  00000000  00002822  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002d48  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 eb       	ldi	r30, 0xB0	; 176
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 32       	cpi	r26, 0x21	; 33
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 c9 00 	call	0x192	; 0x192 <main>
  9e:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z8i2c_initv>:
char message_buffer[BUFFER_SIZE]; 

void i2c_init(void)
{
    // Setez SCL la 400kHz
    TWSR = 0x00;
  a6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    TWBR = 0x0C;
  aa:	8c e0       	ldi	r24, 0x0C	; 12
  ac:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    // Enable i2c
    TWCR = (1<<TWEN);
  b0:	84 e0       	ldi	r24, 0x04	; 4
  b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  b6:	08 95       	ret

000000b8 <_Z9i2c_startv>:
}

void i2c_start(void) {
    // Conditia de start
    TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
  b8:	84 ea       	ldi	r24, 0xA4	; 164
  ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    while ((TWCR & (1<<TWINT)) == 0);
  be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  c2:	88 23       	and	r24, r24
  c4:	e4 f7       	brge	.-8      	; 0xbe <_Z9i2c_startv+0x6>
}
  c6:	08 95       	ret

000000c8 <_Z9i2c_writeh>:

void i2c_write(uint8_t data) {
    TWDR = data;
  c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    // Conditia de write
    TWCR = (1 << TWINT) | (1 << TWEN);
  cc:	84 e8       	ldi	r24, 0x84	; 132
  ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    while ((TWCR & (1<<TWINT)) == 0);
  d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  d6:	88 23       	and	r24, r24
  d8:	e4 f7       	brge	.-8      	; 0xd2 <_Z9i2c_writeh+0xa>
}
  da:	08 95       	ret

000000dc <_Z8i2c_stopv>:

void i2c_stop(void) {
    // Conditia de stop
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
  dc:	84 e9       	ldi	r24, 0x94	; 148
  de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    while (TWCR & (1 << TWSTO));
  e2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  e6:	84 fd       	sbrc	r24, 4
  e8:	fc cf       	rjmp	.-8      	; 0xe2 <_Z8i2c_stopv+0x6>
}
  ea:	08 95       	ret

000000ec <_Z16i2c_write_stringPKc>:

void i2c_write_string(const char *str) {
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	ec 01       	movw	r28, r24
    while (*str) {
  f2:	88 81       	ld	r24, Y
  f4:	88 23       	and	r24, r24
  f6:	21 f0       	breq	.+8      	; 0x100 <_Z16i2c_write_stringPKc+0x14>
        i2c_write(*str);
  f8:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        str++;
  fc:	21 96       	adiw	r28, 0x01	; 1
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
    while (TWCR & (1 << TWSTO));
}

void i2c_write_string(const char *str) {
    while (*str) {
  fe:	f9 cf       	rjmp	.-14     	; 0xf2 <_Z16i2c_write_stringPKc+0x6>
        i2c_write(*str);
        str++;
    }
}
 100:	df 91       	pop	r29
 102:	cf 91       	pop	r28
 104:	08 95       	ret

00000106 <_Z12i2c_read_ackv>:

uint8_t i2c_read_ack(void) {
	TWDR=0;
 106:	10 92 bb 00 	sts	0x00BB, r1	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
 10a:	84 ec       	ldi	r24, 0xC4	; 196
 10c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 110:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 114:	88 23       	and	r24, r24
 116:	e4 f7       	brge	.-8      	; 0x110 <_Z12i2c_read_ackv+0xa>
	return TWDR;
 118:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 11c:	08 95       	ret

0000011e <_Z13i2c_read_nackv>:

uint8_t i2c_read_nack(void) {
	TWCR = (1 << TWINT) | (1 << TWEN);
 11e:	84 e8       	ldi	r24, 0x84	; 132
 120:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 124:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 128:	88 23       	and	r24, r24
 12a:	e4 f7       	brge	.-8      	; 0x124 <_Z13i2c_read_nackv+0x6>
	return TWDR;
 12c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 130:	08 95       	ret

00000132 <_Z15i2c_read_stringPch>:

void i2c_read_string(char *buffer, uint8_t length) 
{
 132:	ef 92       	push	r14
 134:	ff 92       	push	r15
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	7c 01       	movw	r14, r24
 140:	d6 2f       	mov	r29, r22
	strcpy(buffer,"");
 142:	fc 01       	movw	r30, r24
 144:	10 82       	st	Z, r1
	for (uint8_t i = 1; i < length - 1; i++) 
 146:	c1 e0       	ldi	r28, 0x01	; 1
 148:	8d 2f       	mov	r24, r29
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	2c 2f       	mov	r18, r28
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	28 17       	cp	r18, r24
 154:	39 07       	cpc	r19, r25
 156:	4c f4       	brge	.+18     	; 0x16a <_Z15i2c_read_stringPch+0x38>
	{
		buffer[i] = i2c_read_ack();
 158:	87 01       	movw	r16, r14
 15a:	0c 0f       	add	r16, r28
 15c:	11 1d       	adc	r17, r1
 15e:	0e 94 83 00 	call	0x106	; 0x106 <_Z12i2c_read_ackv>
 162:	f8 01       	movw	r30, r16
 164:	80 83       	st	Z, r24
}

void i2c_read_string(char *buffer, uint8_t length) 
{
	strcpy(buffer,"");
	for (uint8_t i = 1; i < length - 1; i++) 
 166:	cf 5f       	subi	r28, 0xFF	; 255
 168:	ef cf       	rjmp	.-34     	; 0x148 <_Z15i2c_read_stringPch+0x16>
	{
		buffer[i] = i2c_read_ack();
	}
	buffer[length - 1] = i2c_read_nack();
 16a:	0d 2f       	mov	r16, r29
 16c:	10 e0       	ldi	r17, 0x00	; 0
 16e:	e8 01       	movw	r28, r16
 170:	21 97       	sbiw	r28, 0x01	; 1
 172:	ce 0d       	add	r28, r14
 174:	df 1d       	adc	r29, r15
 176:	0e 94 8f 00 	call	0x11e	; 0x11e <_Z13i2c_read_nackv>
 17a:	88 83       	st	Y, r24
	buffer[length] = '\0';
 17c:	f7 01       	movw	r30, r14
 17e:	e0 0f       	add	r30, r16
 180:	f1 1f       	adc	r31, r17
 182:	10 82       	st	Z, r1

}
 184:	df 91       	pop	r29
 186:	cf 91       	pop	r28
 188:	1f 91       	pop	r17
 18a:	0f 91       	pop	r16
 18c:	ff 90       	pop	r15
 18e:	ef 90       	pop	r14
 190:	08 95       	ret

00000192 <main>:

int main(void)
{
    i2c_init();
 192:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z8i2c_initv>

    while (1)
    {
        i2c_start();
 196:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 19a:	80 e1       	ldi	r24, 0x10	; 16
 19c:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_write_string("s1");
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	0e 94 76 00 	call	0xec	; 0xec <_Z16i2c_write_stringPKc>
        i2c_stop();
 1a8:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ac:	8f e3       	ldi	r24, 0x3F	; 63
 1ae:	9c e9       	ldi	r25, 0x9C	; 156
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <main+0x1e>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x24>
 1b6:	00 00       	nop
        
        _delay_ms(10); 

		i2c_start();
 1b8:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
		i2c_write((SLA_R << 1) | 1);
 1bc:	81 e1       	ldi	r24, 0x11	; 17
 1be:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 1c2:	6b e0       	ldi	r22, 0x0B	; 11
 1c4:	86 e1       	ldi	r24, 0x16	; 22
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	0e 94 99 00 	call	0x132	; 0x132 <_Z15i2c_read_stringPch>
        i2c_stop();
 1cc:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 1d0:	9f ef       	ldi	r25, 0xFF	; 255
 1d2:	23 ed       	ldi	r18, 0xD3	; 211
 1d4:	80 e3       	ldi	r24, 0x30	; 48
 1d6:	91 50       	subi	r25, 0x01	; 1
 1d8:	20 40       	sbci	r18, 0x00	; 0
 1da:	80 40       	sbci	r24, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <main+0x44>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <main+0x4e>
 1e0:	00 00       	nop
        
        _delay_ms(1000);

        i2c_start();
 1e2:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 1e6:	80 e1       	ldi	r24, 0x10	; 16
 1e8:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_write_string("s2");
 1ec:	83 e0       	ldi	r24, 0x03	; 3
 1ee:	91 e0       	ldi	r25, 0x01	; 1
 1f0:	0e 94 76 00 	call	0xec	; 0xec <_Z16i2c_write_stringPKc>
        i2c_stop();
 1f4:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 1f8:	8f e3       	ldi	r24, 0x3F	; 63
 1fa:	9c e9       	ldi	r25, 0x9C	; 156
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <main+0x6a>
 200:	00 c0       	rjmp	.+0      	; 0x202 <main+0x70>
 202:	00 00       	nop
        
        _delay_ms(10);

        i2c_start();
 204:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 208:	81 e1       	ldi	r24, 0x11	; 17
 20a:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 20e:	6b e0       	ldi	r22, 0x0B	; 11
 210:	86 e1       	ldi	r24, 0x16	; 22
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	0e 94 99 00 	call	0x132	; 0x132 <_Z15i2c_read_stringPch>
        i2c_stop();
 218:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 21c:	9f ef       	ldi	r25, 0xFF	; 255
 21e:	23 ed       	ldi	r18, 0xD3	; 211
 220:	80 e3       	ldi	r24, 0x30	; 48
 222:	91 50       	subi	r25, 0x01	; 1
 224:	20 40       	sbci	r18, 0x00	; 0
 226:	80 40       	sbci	r24, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <main+0x90>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <main+0x9a>
 22c:	00 00       	nop
        
        _delay_ms(1000);

        i2c_start();
 22e:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 232:	80 e1       	ldi	r24, 0x10	; 16
 234:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_write_string("s3");
 238:	86 e0       	ldi	r24, 0x06	; 6
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	0e 94 76 00 	call	0xec	; 0xec <_Z16i2c_write_stringPKc>
        i2c_stop();
 240:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 244:	8f e3       	ldi	r24, 0x3F	; 63
 246:	9c e9       	ldi	r25, 0x9C	; 156
 248:	01 97       	sbiw	r24, 0x01	; 1
 24a:	f1 f7       	brne	.-4      	; 0x248 <main+0xb6>
 24c:	00 c0       	rjmp	.+0      	; 0x24e <main+0xbc>
 24e:	00 00       	nop
        
        _delay_ms(10);

        i2c_start();
 250:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 254:	81 e1       	ldi	r24, 0x11	; 17
 256:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 25a:	6b e0       	ldi	r22, 0x0B	; 11
 25c:	86 e1       	ldi	r24, 0x16	; 22
 25e:	91 e0       	ldi	r25, 0x01	; 1
 260:	0e 94 99 00 	call	0x132	; 0x132 <_Z15i2c_read_stringPch>
        i2c_stop();
 264:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 268:	9f ef       	ldi	r25, 0xFF	; 255
 26a:	23 ed       	ldi	r18, 0xD3	; 211
 26c:	80 e3       	ldi	r24, 0x30	; 48
 26e:	91 50       	subi	r25, 0x01	; 1
 270:	20 40       	sbci	r18, 0x00	; 0
 272:	80 40       	sbci	r24, 0x00	; 0
 274:	e1 f7       	brne	.-8      	; 0x26e <main+0xdc>
 276:	00 c0       	rjmp	.+0      	; 0x278 <main+0xe6>
 278:	00 00       	nop
        
        _delay_ms(1000);

        i2c_start();
 27a:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 27e:	80 e1       	ldi	r24, 0x10	; 16
 280:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_write_string("r3");
 284:	89 e0       	ldi	r24, 0x09	; 9
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	0e 94 76 00 	call	0xec	; 0xec <_Z16i2c_write_stringPKc>
        i2c_stop();
 28c:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 290:	8f e3       	ldi	r24, 0x3F	; 63
 292:	9c e9       	ldi	r25, 0x9C	; 156
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <main+0x102>
 298:	00 c0       	rjmp	.+0      	; 0x29a <main+0x108>
 29a:	00 00       	nop
        
        _delay_ms(10);

        i2c_start();
 29c:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 2a0:	81 e1       	ldi	r24, 0x11	; 17
 2a2:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 2a6:	6b e0       	ldi	r22, 0x0B	; 11
 2a8:	86 e1       	ldi	r24, 0x16	; 22
 2aa:	91 e0       	ldi	r25, 0x01	; 1
 2ac:	0e 94 99 00 	call	0x132	; 0x132 <_Z15i2c_read_stringPch>
        i2c_stop();
 2b0:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 2b4:	9f ef       	ldi	r25, 0xFF	; 255
 2b6:	23 ed       	ldi	r18, 0xD3	; 211
 2b8:	80 e3       	ldi	r24, 0x30	; 48
 2ba:	91 50       	subi	r25, 0x01	; 1
 2bc:	20 40       	sbci	r18, 0x00	; 0
 2be:	80 40       	sbci	r24, 0x00	; 0
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <main+0x128>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <main+0x132>
 2c4:	00 00       	nop
        
        _delay_ms(1000);

        i2c_start();
 2c6:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 2ca:	80 e1       	ldi	r24, 0x10	; 16
 2cc:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_write_string("r2");
 2d0:	8c e0       	ldi	r24, 0x0C	; 12
 2d2:	91 e0       	ldi	r25, 0x01	; 1
 2d4:	0e 94 76 00 	call	0xec	; 0xec <_Z16i2c_write_stringPKc>
        i2c_stop();
 2d8:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 2dc:	8f e3       	ldi	r24, 0x3F	; 63
 2de:	9c e9       	ldi	r25, 0x9C	; 156
 2e0:	01 97       	sbiw	r24, 0x01	; 1
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <main+0x14e>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <main+0x154>
 2e6:	00 00       	nop
        
        _delay_ms(10);

        i2c_start();
 2e8:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 2ec:	81 e1       	ldi	r24, 0x11	; 17
 2ee:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 2f2:	6b e0       	ldi	r22, 0x0B	; 11
 2f4:	86 e1       	ldi	r24, 0x16	; 22
 2f6:	91 e0       	ldi	r25, 0x01	; 1
 2f8:	0e 94 99 00 	call	0x132	; 0x132 <_Z15i2c_read_stringPch>
        i2c_stop();
 2fc:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 300:	9f ef       	ldi	r25, 0xFF	; 255
 302:	23 ed       	ldi	r18, 0xD3	; 211
 304:	80 e3       	ldi	r24, 0x30	; 48
 306:	91 50       	subi	r25, 0x01	; 1
 308:	20 40       	sbci	r18, 0x00	; 0
 30a:	80 40       	sbci	r24, 0x00	; 0
 30c:	e1 f7       	brne	.-8      	; 0x306 <main+0x174>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <main+0x17e>
 310:	00 00       	nop
        
        _delay_ms(1000);

        i2c_start();
 312:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 316:	80 e1       	ldi	r24, 0x10	; 16
 318:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_write_string("r1");
 31c:	8f e0       	ldi	r24, 0x0F	; 15
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	0e 94 76 00 	call	0xec	; 0xec <_Z16i2c_write_stringPKc>
        i2c_stop();
 324:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 328:	8f e3       	ldi	r24, 0x3F	; 63
 32a:	9c e9       	ldi	r25, 0x9C	; 156
 32c:	01 97       	sbiw	r24, 0x01	; 1
 32e:	f1 f7       	brne	.-4      	; 0x32c <main+0x19a>
 330:	00 c0       	rjmp	.+0      	; 0x332 <main+0x1a0>
 332:	00 00       	nop
        
        _delay_ms(10);

        i2c_start();
 334:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 338:	81 e1       	ldi	r24, 0x11	; 17
 33a:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 33e:	6b e0       	ldi	r22, 0x0B	; 11
 340:	86 e1       	ldi	r24, 0x16	; 22
 342:	91 e0       	ldi	r25, 0x01	; 1
 344:	0e 94 99 00 	call	0x132	; 0x132 <_Z15i2c_read_stringPch>
        i2c_stop();
 348:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 34c:	9f ef       	ldi	r25, 0xFF	; 255
 34e:	23 ed       	ldi	r18, 0xD3	; 211
 350:	80 e3       	ldi	r24, 0x30	; 48
 352:	91 50       	subi	r25, 0x01	; 1
 354:	20 40       	sbci	r18, 0x00	; 0
 356:	80 40       	sbci	r24, 0x00	; 0
 358:	e1 f7       	brne	.-8      	; 0x352 <main+0x1c0>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <main+0x1ca>
 35c:	00 00       	nop
        
        _delay_ms(1000);
		
		i2c_start();
 35e:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
		i2c_write((SLA_W)<<1);
 362:	80 e1       	ldi	r24, 0x10	; 16
 364:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
		i2c_write_string("s4");
 368:	82 e1       	ldi	r24, 0x12	; 18
 36a:	91 e0       	ldi	r25, 0x01	; 1
 36c:	0e 94 76 00 	call	0xec	; 0xec <_Z16i2c_write_stringPKc>
		i2c_stop();
 370:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 374:	8f e3       	ldi	r24, 0x3F	; 63
 376:	9c e9       	ldi	r25, 0x9C	; 156
 378:	01 97       	sbiw	r24, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <main+0x1e6>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <main+0x1ec>
 37e:	00 00       	nop
		
		_delay_ms(10);
		
		i2c_start();
 380:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9i2c_startv>
		i2c_write((SLA_R << 1) | 1);
 384:	81 e1       	ldi	r24, 0x11	; 17
 386:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z9i2c_writeh>
		i2c_read_string(message_buffer, BUFFER_SIZE);
 38a:	6b e0       	ldi	r22, 0x0B	; 11
 38c:	86 e1       	ldi	r24, 0x16	; 22
 38e:	91 e0       	ldi	r25, 0x01	; 1
 390:	0e 94 99 00 	call	0x132	; 0x132 <_Z15i2c_read_stringPch>
		i2c_stop();
 394:	0e 94 6e 00 	call	0xdc	; 0xdc <_Z8i2c_stopv>
 398:	9f ef       	ldi	r25, 0xFF	; 255
 39a:	23 ed       	ldi	r18, 0xD3	; 211
 39c:	80 e3       	ldi	r24, 0x30	; 48
 39e:	91 50       	subi	r25, 0x01	; 1
 3a0:	20 40       	sbci	r18, 0x00	; 0
 3a2:	80 40       	sbci	r24, 0x00	; 0
 3a4:	e1 f7       	brne	.-8      	; 0x39e <main+0x20c>
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <main+0x216>
 3a8:	00 00       	nop
 3aa:	f5 ce       	rjmp	.-534    	; 0x196 <main+0x4>

000003ac <_exit>:
 3ac:	f8 94       	cli

000003ae <__stop_program>:
 3ae:	ff cf       	rjmp	.-2      	; 0x3ae <__stop_program>
