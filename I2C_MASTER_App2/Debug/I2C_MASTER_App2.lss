
I2C_MASTER_App2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a8  00800100  00000440  000004d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000440  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  008001a8  008001a8  0000057c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000005ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000111f  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a2  00000000  00000000  00001783  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000785  00000000  00000000  00001f25  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  000026ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000538  00000000  00000000  000027ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000574  00000000  00000000  00002ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003258  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e4       	ldi	r30, 0x40	; 64
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 3a       	cpi	r26, 0xA8	; 168
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 ea       	ldi	r26, 0xA8	; 168
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 3b       	cpi	r26, 0xB3	; 179
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 df 00 	call	0x1be	; 0x1be <main>
  9e:	0c 94 1e 02 	jmp	0x43c	; 0x43c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z10USART_Initj>:
}

void USART_Transmitter(char data)
{
	while(!(UCSR0A & (1 << UDRE0)));
	UDR0 = data;
  a6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  aa:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  ae:	88 e1       	ldi	r24, 0x18	; 24
  b0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  b4:	8e e2       	ldi	r24, 0x2E	; 46
  b6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  ba:	08 95       	ret

000000bc <_Z20USART_TransmitStringPKc>:
  bc:	fc 01       	movw	r30, r24
  be:	80 81       	ld	r24, Z
  c0:	88 23       	and	r24, r24
  c2:	41 f0       	breq	.+16     	; 0xd4 <_Z20USART_TransmitStringPKc+0x18>
  c4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  c8:	95 ff       	sbrs	r25, 5
  ca:	fc cf       	rjmp	.-8      	; 0xc4 <_Z20USART_TransmitStringPKc+0x8>
  cc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  d0:	31 96       	adiw	r30, 0x01	; 1
  d2:	f5 cf       	rjmp	.-22     	; 0xbe <_Z20USART_TransmitStringPKc+0x2>
  d4:	08 95       	ret

000000d6 <_Z8i2c_initv>:
}

void i2c_init(void)
{
    // Setez SCL la 400kHz
    TWSR = 0x00;
  d6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    TWBR = 0x0C;
  da:	8c e0       	ldi	r24, 0x0C	; 12
  dc:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    // Enable i2c
    TWCR = (1<<TWEN);
  e0:	84 e0       	ldi	r24, 0x04	; 4
  e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  e6:	08 95       	ret

000000e8 <_Z9i2c_startv>:
}

void i2c_start(void) {
    // Conditia de start
    TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
  e8:	84 ea       	ldi	r24, 0xA4	; 164
  ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    while ((TWCR & (1<<TWINT)) == 0);
  ee:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  f2:	88 23       	and	r24, r24
  f4:	e4 f7       	brge	.-8      	; 0xee <_Z9i2c_startv+0x6>
}
  f6:	08 95       	ret

000000f8 <_Z9i2c_writeh>:

void i2c_write(uint8_t data) {
    TWDR = data;
  f8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    // Conditia de write
    TWCR = (1 << TWINT) | (1 << TWEN);
  fc:	84 e8       	ldi	r24, 0x84	; 132
  fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    while ((TWCR & (1<<TWINT)) == 0);
 102:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 106:	88 23       	and	r24, r24
 108:	e4 f7       	brge	.-8      	; 0x102 <_Z9i2c_writeh+0xa>
}
 10a:	08 95       	ret

0000010c <_Z8i2c_stopv>:

void i2c_stop(void) {
    // Conditia de stop
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
 10c:	84 e9       	ldi	r24, 0x94	; 148
 10e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    while (TWCR & (1 << TWSTO));
 112:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 116:	84 fd       	sbrc	r24, 4
 118:	fc cf       	rjmp	.-8      	; 0x112 <_Z8i2c_stopv+0x6>
}
 11a:	08 95       	ret

0000011c <_Z16i2c_write_stringPKc>:

void i2c_write_string(const char *str) {
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	ec 01       	movw	r28, r24
    while (*str) {
 122:	88 81       	ld	r24, Y
 124:	88 23       	and	r24, r24
 126:	21 f0       	breq	.+8      	; 0x130 <_Z16i2c_write_stringPKc+0x14>
        i2c_write(*str);
 128:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        str++;
 12c:	21 96       	adiw	r28, 0x01	; 1
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
    while (TWCR & (1 << TWSTO));
}

void i2c_write_string(const char *str) {
    while (*str) {
 12e:	f9 cf       	rjmp	.-14     	; 0x122 <_Z16i2c_write_stringPKc+0x6>
        i2c_write(*str);
        str++;
    }
}
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <_Z12i2c_read_ackv>:

uint8_t i2c_read_ack(void) {
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
 136:	84 ec       	ldi	r24, 0xC4	; 196
 138:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 13c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 140:	88 23       	and	r24, r24
 142:	e4 f7       	brge	.-8      	; 0x13c <_Z12i2c_read_ackv+0x6>
	return TWDR;
 144:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 148:	08 95       	ret

0000014a <_Z13i2c_read_nackv>:

uint8_t i2c_read_nack(void) {
	TWCR = (1 << TWINT) | (1 << TWEN);
 14a:	84 e8       	ldi	r24, 0x84	; 132
 14c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 150:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 154:	88 23       	and	r24, r24
 156:	e4 f7       	brge	.-8      	; 0x150 <_Z13i2c_read_nackv+0x6>
	return TWDR;
 158:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 15c:	08 95       	ret

0000015e <_Z15i2c_read_stringPch>:

void i2c_read_string(char *buffer, uint8_t length) 
{
 15e:	ef 92       	push	r14
 160:	ff 92       	push	r15
 162:	0f 93       	push	r16
 164:	1f 93       	push	r17
 166:	cf 93       	push	r28
 168:	df 93       	push	r29
 16a:	7c 01       	movw	r14, r24
 16c:	d6 2f       	mov	r29, r22
	strcpy(buffer,"");
 16e:	fc 01       	movw	r30, r24
 170:	10 82       	st	Z, r1
	for (uint8_t i = 0; i < length - 1; i++) 
 172:	c0 e0       	ldi	r28, 0x00	; 0
 174:	8d 2f       	mov	r24, r29
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	2c 2f       	mov	r18, r28
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	28 17       	cp	r18, r24
 180:	39 07       	cpc	r19, r25
 182:	4c f4       	brge	.+18     	; 0x196 <_Z15i2c_read_stringPch+0x38>
	{	
		buffer[i] = i2c_read_ack();
 184:	87 01       	movw	r16, r14
 186:	0c 0f       	add	r16, r28
 188:	11 1d       	adc	r17, r1
 18a:	0e 94 9b 00 	call	0x136	; 0x136 <_Z12i2c_read_ackv>
 18e:	f8 01       	movw	r30, r16
 190:	80 83       	st	Z, r24
}

void i2c_read_string(char *buffer, uint8_t length) 
{
	strcpy(buffer,"");
	for (uint8_t i = 0; i < length - 1; i++) 
 192:	cf 5f       	subi	r28, 0xFF	; 255
 194:	ef cf       	rjmp	.-34     	; 0x174 <_Z15i2c_read_stringPch+0x16>
	{	
		buffer[i] = i2c_read_ack();
	}
	buffer[length - 1] = i2c_read_nack();
 196:	0d 2f       	mov	r16, r29
 198:	10 e0       	ldi	r17, 0x00	; 0
 19a:	e8 01       	movw	r28, r16
 19c:	21 97       	sbiw	r28, 0x01	; 1
 19e:	ce 0d       	add	r28, r14
 1a0:	df 1d       	adc	r29, r15
 1a2:	0e 94 a5 00 	call	0x14a	; 0x14a <_Z13i2c_read_nackv>
 1a6:	88 83       	st	Y, r24
	buffer[length] = '\0';
 1a8:	f7 01       	movw	r30, r14
 1aa:	e0 0f       	add	r30, r16
 1ac:	f1 1f       	adc	r31, r17
 1ae:	10 82       	st	Z, r1

}
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	1f 91       	pop	r17
 1b6:	0f 91       	pop	r16
 1b8:	ff 90       	pop	r15
 1ba:	ef 90       	pop	r14
 1bc:	08 95       	ret

000001be <main>:
//	while (TWCR & (1 << TWSTO));
//}

int main(void)
{
    i2c_init();
 1be:	0e 94 6b 00 	call	0xd6	; 0xd6 <_Z8i2c_initv>
	USART_Init(MYUBRR);
 1c2:	87 e6       	ldi	r24, 0x67	; 103
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10USART_Initj>
    while (1)
    {
        USART_TransmitString("Tranzactia i2c a inceput. \r\n");
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
		i2c_start();
 1d2:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
		 
		USART_TransmitString("Setup pemtru write. \r\n");
 1d6:	8d e1       	ldi	r24, 0x1D	; 29
 1d8:	91 e0       	ldi	r25, 0x01	; 1
 1da:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
		i2c_write((SLA_W)<<1);
 1de:	80 e1       	ldi	r24, 0x10	; 16
 1e0:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
		
		USART_TransmitString("S-a transmis S1. \r\n");  
 1e4:	84 e3       	ldi	r24, 0x34	; 52
 1e6:	91 e0       	ldi	r25, 0x01	; 1
 1e8:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
        i2c_write_string("s1");
 1ec:	88 e4       	ldi	r24, 0x48	; 72
 1ee:	91 e0       	ldi	r25, 0x01	; 1
 1f0:	0e 94 8e 00 	call	0x11c	; 0x11c <_Z16i2c_write_stringPKc>
		
		USART_TransmitString("Tranzactia i2c a incetat. \r\n");  
 1f4:	8b e4       	ldi	r24, 0x4B	; 75
 1f6:	91 e0       	ldi	r25, 0x01	; 1
 1f8:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
        i2c_stop();
 1fc:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 200:	8f e3       	ldi	r24, 0x3F	; 63
 202:	9c e9       	ldi	r25, 0x9C	; 156
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <main+0x46>
 208:	00 c0       	rjmp	.+0      	; 0x20a <main+0x4c>
 20a:	00 00       	nop
       

	    _delay_ms(10);

		USART_TransmitString("Tranzactia i2c a inceput. \r\n");
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
		i2c_start();
 214:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
		
		USART_TransmitString("Setup pentru read. \r\n");
 218:	88 e6       	ldi	r24, 0x68	; 104
 21a:	91 e0       	ldi	r25, 0x01	; 1
 21c:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
		i2c_write((SLA_R << 1) | 1);
 220:	81 e1       	ldi	r24, 0x11	; 17
 222:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
		
        i2c_read_string(message_buffer, BUFFER_SIZE);
 226:	6b e0       	ldi	r22, 0x0B	; 11
 228:	88 ea       	ldi	r24, 0xA8	; 168
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	0e 94 af 00 	call	0x15e	; 0x15e <_Z15i2c_read_stringPch>
 
		USART_TransmitString("Tranzactia i2c a incetat. \r\n");
 230:	8b e4       	ldi	r24, 0x4B	; 75
 232:	91 e0       	ldi	r25, 0x01	; 1
 234:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
		i2c_stop();
 238:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 23c:	9f ef       	ldi	r25, 0xFF	; 255
 23e:	23 ed       	ldi	r18, 0xD3	; 211
 240:	80 e3       	ldi	r24, 0x30	; 48
 242:	91 50       	subi	r25, 0x01	; 1
 244:	20 40       	sbci	r18, 0x00	; 0
 246:	80 40       	sbci	r24, 0x00	; 0
 248:	e1 f7       	brne	.-8      	; 0x242 <main+0x84>
 24a:	00 c0       	rjmp	.+0      	; 0x24c <main+0x8e>
 24c:	00 00       	nop
		       
			   
        _delay_ms(1000);

        i2c_start();
 24e:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
		USART_TransmitString("Tranzactia i2c a inceput. \r\n");
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	91 e0       	ldi	r25, 0x01	; 1
 256:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
		
        i2c_write((SLA_W)<<1);
 25a:	80 e1       	ldi	r24, 0x10	; 16
 25c:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
		USART_TransmitString("Setup pentru write. \r\n");
 260:	8e e7       	ldi	r24, 0x7E	; 126
 262:	91 e0       	ldi	r25, 0x01	; 1
 264:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
		
        i2c_write_string("s2");
 268:	85 e9       	ldi	r24, 0x95	; 149
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	0e 94 8e 00 	call	0x11c	; 0x11c <_Z16i2c_write_stringPKc>
		USART_TransmitString("S-a transmis S1. \r\n");
 270:	84 e3       	ldi	r24, 0x34	; 52
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
		
        i2c_stop();
 278:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
        USART_TransmitString("Tranzactia i2c a incetat. \r\n"); 
 27c:	8b e4       	ldi	r24, 0x4B	; 75
 27e:	91 e0       	ldi	r25, 0x01	; 1
 280:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z20USART_TransmitStringPKc>
 284:	8f e3       	ldi	r24, 0x3F	; 63
 286:	9c e9       	ldi	r25, 0x9C	; 156
 288:	01 97       	sbiw	r24, 0x01	; 1
 28a:	f1 f7       	brne	.-4      	; 0x288 <main+0xca>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0xd0>
 28e:	00 00       	nop
		
        _delay_ms(10);

        i2c_start();
 290:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 294:	81 e1       	ldi	r24, 0x11	; 17
 296:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 29a:	6b e0       	ldi	r22, 0x0B	; 11
 29c:	88 ea       	ldi	r24, 0xA8	; 168
 29e:	91 e0       	ldi	r25, 0x01	; 1
 2a0:	0e 94 af 00 	call	0x15e	; 0x15e <_Z15i2c_read_stringPch>
        i2c_stop();
 2a4:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 2a8:	9f ef       	ldi	r25, 0xFF	; 255
 2aa:	23 ed       	ldi	r18, 0xD3	; 211
 2ac:	80 e3       	ldi	r24, 0x30	; 48
 2ae:	91 50       	subi	r25, 0x01	; 1
 2b0:	20 40       	sbci	r18, 0x00	; 0
 2b2:	80 40       	sbci	r24, 0x00	; 0
 2b4:	e1 f7       	brne	.-8      	; 0x2ae <main+0xf0>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <main+0xfa>
 2b8:	00 00       	nop
        
        _delay_ms(1000);

        i2c_start();
 2ba:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 2be:	80 e1       	ldi	r24, 0x10	; 16
 2c0:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        i2c_write_string("s3");
 2c4:	88 e9       	ldi	r24, 0x98	; 152
 2c6:	91 e0       	ldi	r25, 0x01	; 1
 2c8:	0e 94 8e 00 	call	0x11c	; 0x11c <_Z16i2c_write_stringPKc>
        i2c_stop();
 2cc:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 2d0:	8f e3       	ldi	r24, 0x3F	; 63
 2d2:	9c e9       	ldi	r25, 0x9C	; 156
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <main+0x116>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <main+0x11c>
 2da:	00 00       	nop
        
        _delay_ms(10);

        i2c_start();
 2dc:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 2e0:	81 e1       	ldi	r24, 0x11	; 17
 2e2:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 2e6:	6b e0       	ldi	r22, 0x0B	; 11
 2e8:	88 ea       	ldi	r24, 0xA8	; 168
 2ea:	91 e0       	ldi	r25, 0x01	; 1
 2ec:	0e 94 af 00 	call	0x15e	; 0x15e <_Z15i2c_read_stringPch>
        i2c_stop();
 2f0:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 2f4:	9f ef       	ldi	r25, 0xFF	; 255
 2f6:	23 ed       	ldi	r18, 0xD3	; 211
 2f8:	80 e3       	ldi	r24, 0x30	; 48
 2fa:	91 50       	subi	r25, 0x01	; 1
 2fc:	20 40       	sbci	r18, 0x00	; 0
 2fe:	80 40       	sbci	r24, 0x00	; 0
 300:	e1 f7       	brne	.-8      	; 0x2fa <main+0x13c>
 302:	00 c0       	rjmp	.+0      	; 0x304 <main+0x146>
 304:	00 00       	nop
        
        _delay_ms(1000);

        i2c_start();
 306:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 30a:	80 e1       	ldi	r24, 0x10	; 16
 30c:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        i2c_write_string("r3");
 310:	8b e9       	ldi	r24, 0x9B	; 155
 312:	91 e0       	ldi	r25, 0x01	; 1
 314:	0e 94 8e 00 	call	0x11c	; 0x11c <_Z16i2c_write_stringPKc>
        i2c_stop();
 318:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 31c:	8f e3       	ldi	r24, 0x3F	; 63
 31e:	9c e9       	ldi	r25, 0x9C	; 156
 320:	01 97       	sbiw	r24, 0x01	; 1
 322:	f1 f7       	brne	.-4      	; 0x320 <main+0x162>
 324:	00 c0       	rjmp	.+0      	; 0x326 <main+0x168>
 326:	00 00       	nop
        
        _delay_ms(10);

        i2c_start();
 328:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 32c:	81 e1       	ldi	r24, 0x11	; 17
 32e:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 332:	6b e0       	ldi	r22, 0x0B	; 11
 334:	88 ea       	ldi	r24, 0xA8	; 168
 336:	91 e0       	ldi	r25, 0x01	; 1
 338:	0e 94 af 00 	call	0x15e	; 0x15e <_Z15i2c_read_stringPch>
        i2c_stop();
 33c:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 340:	9f ef       	ldi	r25, 0xFF	; 255
 342:	23 ed       	ldi	r18, 0xD3	; 211
 344:	80 e3       	ldi	r24, 0x30	; 48
 346:	91 50       	subi	r25, 0x01	; 1
 348:	20 40       	sbci	r18, 0x00	; 0
 34a:	80 40       	sbci	r24, 0x00	; 0
 34c:	e1 f7       	brne	.-8      	; 0x346 <main+0x188>
 34e:	00 c0       	rjmp	.+0      	; 0x350 <main+0x192>
 350:	00 00       	nop
        
        _delay_ms(1000);

        i2c_start();
 352:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 356:	80 e1       	ldi	r24, 0x10	; 16
 358:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        i2c_write_string("r2");
 35c:	8e e9       	ldi	r24, 0x9E	; 158
 35e:	91 e0       	ldi	r25, 0x01	; 1
 360:	0e 94 8e 00 	call	0x11c	; 0x11c <_Z16i2c_write_stringPKc>
        i2c_stop();
 364:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 368:	8f e3       	ldi	r24, 0x3F	; 63
 36a:	9c e9       	ldi	r25, 0x9C	; 156
 36c:	01 97       	sbiw	r24, 0x01	; 1
 36e:	f1 f7       	brne	.-4      	; 0x36c <main+0x1ae>
 370:	00 c0       	rjmp	.+0      	; 0x372 <main+0x1b4>
 372:	00 00       	nop
        
        _delay_ms(10);

        i2c_start();
 374:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 378:	81 e1       	ldi	r24, 0x11	; 17
 37a:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 37e:	6b e0       	ldi	r22, 0x0B	; 11
 380:	88 ea       	ldi	r24, 0xA8	; 168
 382:	91 e0       	ldi	r25, 0x01	; 1
 384:	0e 94 af 00 	call	0x15e	; 0x15e <_Z15i2c_read_stringPch>
        i2c_stop();
 388:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 38c:	9f ef       	ldi	r25, 0xFF	; 255
 38e:	23 ed       	ldi	r18, 0xD3	; 211
 390:	80 e3       	ldi	r24, 0x30	; 48
 392:	91 50       	subi	r25, 0x01	; 1
 394:	20 40       	sbci	r18, 0x00	; 0
 396:	80 40       	sbci	r24, 0x00	; 0
 398:	e1 f7       	brne	.-8      	; 0x392 <main+0x1d4>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <main+0x1de>
 39c:	00 00       	nop
        
        _delay_ms(1000);

        i2c_start();
 39e:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
        i2c_write((SLA_W)<<1);
 3a2:	80 e1       	ldi	r24, 0x10	; 16
 3a4:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        i2c_write_string("r1");
 3a8:	81 ea       	ldi	r24, 0xA1	; 161
 3aa:	91 e0       	ldi	r25, 0x01	; 1
 3ac:	0e 94 8e 00 	call	0x11c	; 0x11c <_Z16i2c_write_stringPKc>
        i2c_stop();
 3b0:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 3b4:	8f e3       	ldi	r24, 0x3F	; 63
 3b6:	9c e9       	ldi	r25, 0x9C	; 156
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <main+0x1fa>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <main+0x200>
 3be:	00 00       	nop
        
        _delay_ms(10);

        i2c_start();
 3c0:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
        i2c_write((SLA_R << 1) | 1);
 3c4:	81 e1       	ldi	r24, 0x11	; 17
 3c6:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
        i2c_read_string(message_buffer, BUFFER_SIZE);
 3ca:	6b e0       	ldi	r22, 0x0B	; 11
 3cc:	88 ea       	ldi	r24, 0xA8	; 168
 3ce:	91 e0       	ldi	r25, 0x01	; 1
 3d0:	0e 94 af 00 	call	0x15e	; 0x15e <_Z15i2c_read_stringPch>
        i2c_stop();
 3d4:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 3d8:	9f ef       	ldi	r25, 0xFF	; 255
 3da:	23 ed       	ldi	r18, 0xD3	; 211
 3dc:	80 e3       	ldi	r24, 0x30	; 48
 3de:	91 50       	subi	r25, 0x01	; 1
 3e0:	20 40       	sbci	r18, 0x00	; 0
 3e2:	80 40       	sbci	r24, 0x00	; 0
 3e4:	e1 f7       	brne	.-8      	; 0x3de <main+0x220>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <main+0x22a>
 3e8:	00 00       	nop
        
        _delay_ms(1000);
		
		i2c_start();
 3ea:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
		i2c_write((SLA_W)<<1);
 3ee:	80 e1       	ldi	r24, 0x10	; 16
 3f0:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
		i2c_write_string("s4");
 3f4:	84 ea       	ldi	r24, 0xA4	; 164
 3f6:	91 e0       	ldi	r25, 0x01	; 1
 3f8:	0e 94 8e 00 	call	0x11c	; 0x11c <_Z16i2c_write_stringPKc>
		i2c_stop();
 3fc:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 400:	8f e3       	ldi	r24, 0x3F	; 63
 402:	9c e9       	ldi	r25, 0x9C	; 156
 404:	01 97       	sbiw	r24, 0x01	; 1
 406:	f1 f7       	brne	.-4      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 408:	00 c0       	rjmp	.+0      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 40a:	00 00       	nop
		
		_delay_ms(10);
		
		i2c_start();
 40c:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z9i2c_startv>
		i2c_write((SLA_R << 1) | 1);
 410:	81 e1       	ldi	r24, 0x11	; 17
 412:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z9i2c_writeh>
		TWDR=0;
 416:	10 92 bb 00 	sts	0x00BB, r1	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
		i2c_read_string(message_buffer, BUFFER_SIZE);
 41a:	6b e0       	ldi	r22, 0x0B	; 11
 41c:	88 ea       	ldi	r24, 0xA8	; 168
 41e:	91 e0       	ldi	r25, 0x01	; 1
 420:	0e 94 af 00 	call	0x15e	; 0x15e <_Z15i2c_read_stringPch>
		i2c_stop();
 424:	0e 94 86 00 	call	0x10c	; 0x10c <_Z8i2c_stopv>
 428:	9f ef       	ldi	r25, 0xFF	; 255
 42a:	23 ed       	ldi	r18, 0xD3	; 211
 42c:	80 e3       	ldi	r24, 0x30	; 48
 42e:	91 50       	subi	r25, 0x01	; 1
 430:	20 40       	sbci	r18, 0x00	; 0
 432:	80 40       	sbci	r24, 0x00	; 0
 434:	e1 f7       	brne	.-8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 436:	00 c0       	rjmp	.+0      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 438:	00 00       	nop
 43a:	c7 ce       	rjmp	.-626    	; 0x1ca <main+0xc>

0000043c <_exit>:
 43c:	f8 94       	cli

0000043e <__stop_program>:
 43e:	ff cf       	rjmp	.-2      	; 0x43e <__stop_program>
